#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
  schedule:
    - cron: 0 16 * * 6
  watch:
    types: started

env:
  #REPO_URL: https://github.com/Lienol/openwrt
  #REPO_BRANCH: dev-19.07
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  SOFT_SH: soft.sh
  DIY_SH: diy.sh
  CONFIG_SH: config.sh
  SSH_ACTIONS: true
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: true
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: 初始化环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "$TZ"

        df -h

    - name: 克隆代码
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt

    # 界面化配置,等待SSH连接 
    # - name: 等待SSH连接
    #   uses: P3TERX/debugger-action@master
    #   if: env.SSH_ACTIONS == 'true'

    - name: 执行soft.sh
      run: |
        pwd
        chmod +x $SOFT_SH
        cd openwrt
        ../$SOFT_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: 执行diy.sh
      run: |
        pwd
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: 执行config.sh
      run: |
        pwd
        chmod +x $CONFIG_SH
        ./$CONFIG_SH
          

    # 界面化配置,等待SSH连接 
    # - name: SSH connection to Actions
    #   uses: P3TERX/debugger-action@master
    #   if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        pwd
        cd openwrt
        make download -j8
        find ./dl/ -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        pwd
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s
        echo "::set-output name=status::success"

    - name: 上传config
      uses: actions/upload-artifact@master
      with:
        name: config.seed
        path: ./bin/targets/*/*/config.seed

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        pwd
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: 上传到奶牛快传
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_COWTRANSFER == 'true' && !cancelled()
      run: |
        pwd
        curl -fsSL git.io/file-transfer | sh
        ./transfer cow --block 2621440 -s -p 64 --no-progress ${FIRMWARE} 2>&1 | tee cowtransfer.log
        echo "::warning file=cowtransfer.com::$(cat cowtransfer.log | grep https)"

    - name: 上传到WeTransfer
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_WETRANSFER == 'true' && !cancelled()
      run: |
        pwd
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep https)"
